{"version":3,"file":"decorators.js","sourceRoot":"","sources":["src/decorators.ts"],"names":[],"mappings":"AACA,OAAO,EACH,cAAc,EACd,KAAK,EACR,CAAA;AAED;;;;;GAKG;AACF,MAAM,KAAK,GAAG,CAAC,SAAiB,EAAE,OAAsB,EAAE,EAAE,CAC5D,CAAC,SAAc,EAAE,OAAe,EAAE,EAAE;IAClC,MAAM,EAAC,MAAM,GAAG,EAAE,EAAC,GAAG,SAAS,CAAC,WAAW,CAAC;IAC5C,MAAM,CAAC,SAAS,CAAC,mCACZ,MAAM,CAAC,SAAS,CAAC,KACpB,QAAQ,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAC3B,eAAe,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,eAAe,EACzC,wBAAwB,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,wBAAwB,EAC3D,OAAO,GACR,CAAC;IACF,SAAS,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;AACxC,CAAC,CAAC;AAGH;;;;EAIE;AACF,MAAM,cAAc,GAAG,CAAC,QAAiC,EAAE,OAA6B,EAAE,EAAE,CAC3F,CAAC,IAAmB,EAAE,EAAE;IACtB,IAAI,CAAC,cAAc,GAAG,QAA4B,CAAC;IACnD,IAAI,OAAO,EAAE;QACX,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,eAAe,CAAC;QACrD,IAAI,CAAC,8BAA8B,GAAG,OAAO,CAAC,wBAAwB,CAAC;KACxE;AACH,CAAC,CAAC","sourcesContent":["import {EventMapEvent, EventMapListenAt, EventMapMixin, EventMapPropagation } from \"./EventMap\";\r\nexport { \r\n    eventsListenAt,\r\n    event\r\n}\r\n\r\n/**\r\n * A method decorator to define an event handler.\r\n * @param {String} eventName \r\n * @param {EventMapEvent?} options an object to define the listenAt property\r\n * @returns {EventMapDefinitionItem}\r\n */\r\n const event = (eventName: string, options?:EventMapEvent) =>\r\n (prototype: any, handler: string) => {\r\n   const {events = {}} = prototype.constructor;\r\n   events[eventName] = {\r\n     ...events[eventName],\r\n     listenAt: options?.listenAt,\r\n     stopPropagation: options?.stopPropagation,\r\n     stopImmediatePropagation: options?.stopImmediatePropagation,\r\n     handler\r\n   };\r\n   prototype.constructor.events = events;\r\n };\r\n\r\n\r\n/**\r\n* A class decorator to define the default\r\n* eventsListenAt static property.\r\n* @param {EventMapListenAt|string} listenAt\r\n*/\r\nconst eventsListenAt = (listenAt: EventMapListenAt|string, options?: EventMapPropagation) =>\r\n (ctor: EventMapMixin) => {\r\n   ctor.eventsListenAt = listenAt as EventMapListenAt;\r\n   if (options) {\r\n     ctor.eventsStopPropagation = options.stopPropagation;\r\n     ctor.eventsStopImmediatePropagation = options.stopImmediatePropagation;\r\n   }\r\n };"]}